apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'org.greenrobot.greendao'
apply plugin: 'com.mob.sdk'

android {
    signingConfigs {
        config {
            keyAlias 'australia'
            keyPassword '123456'
            storeFile file('../key.jks')
            storePassword '123456'
        }
    }
    compileSdkVersion rootProject.ext.compilesdkversion
    defaultConfig {
        applicationId "com.ruanyun.australianews"
        minSdkVersion rootProject.ext.minsdkversion
        targetSdkVersion rootProject.ext.targetsdkversion
        versionCode 23
        versionName "0.0.23"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        ndk {
            //设置支持的SO库架构（开发者可以根据需要，选择一个或多个平台的so）
            abiFilters "armeabi-v7a", "arm64-v8a"
        }
        flavorDimensions "versionCode"

        manifestPlaceholders = [
                JPUSH_PKGNAME: applicationId,
                JPUSH_APPKEY : "1f668305c3ab62def16f1dc0", //JPush上注册的包名对应的appkey.
                JPUSH_CHANNEL: "developer-default", //暂时填写默认值即可.
        ]
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
            res.srcDirs = ['src/main/res', 'src/main/res-base']
        }
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }
        debug {
//            minifyEnabled true
//            shrinkResources true
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }
    }
    repositories {
        flatDir {
            dirs 'libs'
        }
    }
    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }
    greendao {
        schemaVersion 2
    }
    MobSDK {
        appKey "2d5078eb40be6"
        appSecret "3923b3c2e2dafaea2c7994cc12b28c45"
        ShareSDK {
            loopShare false
            devInfo {
                Wechat {
                    sortId 1
//                    appId "wx2d18376dd3c54154"
//                    appSecret "8c065c2b66d0321a81719858d9fbde8b"
                    appId "wxacdd7c584e315282"
                    appSecret "85a02a568f445b35923a2b5ecf05726c"
                }
                WechatMoments {
                    sortId 2
                    appId "wxacdd7c584e315282"
                    appSecret "cde4413637403a6fa74d48be7272e437"
                }
                QQ {
                    sortId 3
                    shareByAppClient true
//                    appId "1108782198"
//                    appKey "6ovViIQR4dXhnDPD"
                    appId "1110437494"
                    appKey "hHDWY5NcDHaMdRoe"
                }
                QZone {
                    sortId 4
//                    appId "1108782198"
//                    appKey "6ovViIQR4dXhnDPD"
                    appId "1110437494"
                    appKey "hHDWY5NcDHaMdRoe"
                }
                SinaWeibo {
                    appKey "568898243"
                    appSecret "38a4f8204cc784f81f9f0daaf31e02e3"
                    callbackUri "http://www.sharesdk.cn"
                    shareByAppClient true
                }
            }
        }
    }
    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
    androidExtensions {
        experimental = true
    }

}
project.afterEvaluate {
    project.android.applicationVariants.all { variant ->
        variant.outputs.each { output ->
            output.processResources.doFirst { pm ->
                String manifestPath = output.processResources.manifestFile;
                def manifestContent = file(manifestPath).getText()
                manifestContent = manifestContent.replace('<uses-permission android:name="android.permission.RECEIVE_SMS"/>', '')
                file(manifestPath).write(manifestContent)
            }
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "com.android.support:design:$DESIGIN_SUPPORT_VERSION"
    implementation "com.android.support:cardview-v7:$V7_CARDVIEW_VERSION"
    implementation "com.android.support.constraint:constraint-layout:$CONSTRAIT_SUPPORT_VERSION"
//    testImplementation 'junit:junit:4.12'
//    androidTestImplementation 'com.android.support.test:runner:1.0.2'
//    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation 'com.android.support:multidex:1.0.3'

    implementation(name: 'baseadapterlib', ext: 'aar')
    implementation project(':chatapp')
    implementation project(':android-pickers')
    implementation project(':gridviewpager')

    //enventbus
    implementation 'org.greenrobot:eventbus:3.1.1'

    //retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.5.0'

    //okhttp
    implementation 'com.squareup.okhttp3:okhttp:3.12.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava:2.4.0'

    //美洽
    implementation 'com.meiqia:meiqiasdk:+'

    //rx
    implementation 'io.reactivex:rxjava:1.3.4'
    implementation 'io.reactivex:rxandroid:1.2.1'

    // Dagger dependencies
    implementation 'com.google.dagger:dagger:2.16'
    implementation 'com.google.dagger:dagger-android:2.16'
    implementation 'com.google.dagger:dagger-android-support:2.16'
    implementation 'com.android.support:support-v4:28.0.0'
    annotationProcessor "com.google.dagger:dagger-compiler:2.16"
    annotationProcessor "com.google.dagger:dagger-android-processor:2.16"

    //greendao
    implementation 'org.greenrobot:greendao:3.2.2'
    compileOnly 'org.glassfish:javax.annotation:10.0-b28'
    implementation 'in.srain.cube:ultra-ptr:1.0.11@aar'

    //轮播切换
    implementation 'com.bigkoo:convenientbanner:2.0.5'

    //bugly
    implementation 'com.tencent.bugly:crashreport_upgrade:1.3.8'

    //FlexboxLayout
    implementation 'com.google.android:flexbox:0.3.1'

    //tablayout
    implementation 'com.flyco.tablayout:FlycoTabLayout_Lib:2.1.2@aar'
    implementation 'io.github.luizgrp.sectionedrecyclerviewadapter:sectionedrecyclerviewadapter:1.2.0'
    implementation 'com.github.duanhong169:drawabletoolbox:1.0.6'
    implementation 'com.github.JuHonggang:ShadowDrawable:0.1'

    //autosize
    implementation 'me.jessyan:autosize:1.1.2'

    // 微信支付
    implementation 'com.tencent.mm.opensdk:wechat-sdk-android-without-mta:5.1.6'
    // 微信唤起app
    api 'com.tencent.mm.opensdk:wechat-sdk-android-without-mta:+'

    //FlexboxLayout
    implementation 'com.google.android:flexbox:0.3.1'

    //七牛
//    implementation 'com.qiniu:qiniu-android-sdk:7.3.15'

    //完整版引入
//    implementation 'com.shuyu:GSYVideoPlayer:6.0.3'

    //完整版引入
    implementation 'com.shuyu:GSYVideoPlayer:6.0.3'

    //百度地图
    implementation files('libs/BaiduLBS_Android.jar')

//    //支付宝
    implementation(name: 'alipaySdk-15.7.4', ext: 'aar')

    //飞讯
    implementation files('libs/Msc.jar')


    // 极光推送 //    ee84f5ca818862b08ffc168d
    implementation 'cn.jiguang.sdk:jpush:3.1.3'
    implementation 'cn.jiguang.sdk:jcore:1.2.3'


    //pdf
    implementation 'com.github.barteksc:android-pdf-viewer:2.8.2'

    //PAYPAL 集成sdk
    implementation 'com.paypal.sdk:paypal-android-sdk:2.16.0'

}
